//...190~192p.import React, { Component } from 'react';import { render } from 'react-dom';import { Router, Route, IndexRoute, Link } from 'react-router';//%%%import createBrowserHistory from 'history/lib/createBrowserHistory'import About from './About';import Repos from './Repos';import RepoDetails from './RepoDetails';import Home from './Home';//%%%import ServerError from './ServerError';class App extends Component {  render() {    return (      <div>        <header>App</header>        <menu>          <ul>            {/*...191p.lINK 속석의 activeClassName 은 자동으로 클래스 이름을            활성 링크로 추가함.            before:            <li><Link to="/about">About</Link></li>            <li><Link to="/repos">Repos</Link></li>            after:*/}            <li><Link to="/about" activeClassName="active">About</Link></li>            <li><Link to="/repos" activeClassName="active">Repos</Link></li>          </ul>        </menu>        {this.props.children}      </div>    );  }}render((  <Router>    <Route path="/" component={App}>      <IndexRoute component={Home}/>      <Route path="about" component={About} />      <Route path="repos" component={Repos}>        {/*...190p.UI 를 중첩하려는 위치에 라우트를 중첩해 추가함.          라우트 안에 :repo_name 와 같은 동적 세그먼트를 선언하면 리액트 라우터가          URL 의 해당 부분에 있는 데이터를 컴포넌트 속성 내의 매개변수 특성으로          주입함.*/}        <Route path="details/:repo_name" component={RepoDetails} />      </Route>      {/*%%%<Route path="error" component={ServerError} /> %%%*/}    </Route>  </Router>), document.getElementById('root'));